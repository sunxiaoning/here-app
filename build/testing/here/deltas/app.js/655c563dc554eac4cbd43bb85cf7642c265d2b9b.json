["function _985b98d3c4f4097e6ac8498429d0eb39fb1e7d6c(){};",176303,37,92,1048484,1048576,124875,1181913,134758,1350736,37,1321725,677993,"This component is used in {@link Ext.navigation.View} to control animations in the toolbar. You should never need to\n * interact with the component directly, unless you are subclassing it.\n * @private\n * @author Robert Dougan <rob",1559868,34,"navigation.Bar', {\r\n    extend: Ext.TitleBar",1223942,84,1043136,75,1224109,38,1043136,45,1309124,282," You should NEVER set this, it is used internally. You set the title of the\n         * navigation bar by giving a navigation views children a title configuration",1230016,64,1283262,41,"\n         * @h",837407,46,1224646,51,"\n         * @ignor",761872,44,1226239,35,976640,42,1055049,52,"NavigationBar. The {@link #cfg-defaultType} of\n         * a Navigation",1310197,245,"NavigationBar.\n         * @h",837407,46,1410112,36,"BackButtonText\n         * The text to be displayed on the back button if:\n         * a) The previous view does not have a title\n         * b) The {@link #useTitleForBackButtonText} configuration is true",1230016,64,"defaultBackButtonText: 'Back",1114448,33,"Object} anim",265339,36,2000864,33,"nimation: {\r\n            duration: 3",976638,44,"{Boolean} useTitleForBackButtonText\n         * Set to false if you always want to display the {@link #defaultBackButtonText} as the text\n         * on the back button. True if you want to use the previous views title",1230016,67,"TitleForBackButtonTex",1477696,39,"Ext.navigation.View} view A reference to the navigation view this bar is linked to",1230016,64,"view",914352,38,"Boolean} androidAnimation Optionally enable CSS transforms on Android 2\n         * for NavigationBar animations.  Note that this may cause flickering if the\n         * NavigationBar is hidde",864016,45,"android2Transform",1622479,40,"Ext.Button/Object} backButton The configuration for the back button",181136,33,1114382,32,"ckButton: {\r\n            align: 'left',\r\n            ui: 'back',\r\n",1101804,34,"}",2009724,158,"animation: false",2009906,36,"@event back\n     * Fires when the back button was tapped.\n     * @param {Ext.navigation.Bar} this This bar",959360,36,1654544,55,"!config.items) {\r\n            config.items",455895,32,"backButtonStack = [];\r\n        this.activeAnimations = [];",1601918,75,314688,32,"applyBackButt",1129132,32,"return Ext.factory(config, Ext.Button, this.getBackButton",1119215,57,"BackButton: function(newBackButton, oldBackButton) {\r\n        if (oldBackButton",1293289,32,"BackButton);\r\n        }\r\n        if (newBackButton) {\r\n            this.add(newBackButton);\r\n            newBackButton.on({\r\n",803615,46,"tap: this.onBackButtonTap",345392,42,"onBackButtonTap",1178064,40,"back",891502,56,"updateView: function(newView",534464,41,"backButton = me.getBackButton(),\r\n            innerItems, i, backButtonText, item, title, titleText;\r\n        me.getItems();\r\n        if (newView) {\r\n            //update the back button stack with the current inner items of the view\r\n            innerItems = newView.getInnerItems",31522,33,"innerItems.",1188816,32,893545,35,"    title = (item.getTitle) ? item.getTitle() : item.config.title;\r\n                me.backButtonStack.push(title || '&nbsp;",60720,32,"titleText = me.getTitleText();\r\n            if (titleText",4048,35,"titleText = ''",691055,33,"setTitle(titleText);\r\n            backButtonText = me.getBackButtonText();\r\n            if (backButtonText) {\r\n                backButton.setText(backButtonText);\r\n                backButton.show()",1656464,67,"/\r\n    onViewAdd: function(view",1075214,47,"backButtonStack = me.backButtonStack,\r\n            hasPrevious, title;\r\n        me.endAnimation();\r\n        title = (item.getTitle) ? item.getTitle() : item.config.title;\r\n        backButtonStack.push(title || '&nbsp;');\r\n        hasPrevious = backButtonStack.length > 1;\r\n        me.doChangeView(view, hasPrevious, ",735168,32,"@private\n     */\r\n    onViewRemove: function(view",534464,41,"backButtonStack = me.backButtonStack,\r\n            hasPrevious;\r\n        me.endAnimation();\r\n        backButtonStack.pop();\r\n        hasPrevious = backButtonStack.length > 1;\r\n        me.doChangeView(view, hasPrevious,",1059757,32,"@private\n     */\r\n    doChangeView: function(view, hasPrevious, revers",571216,42,"leftBox = me.leftBox,\r\n            leftBoxElement = leftBox.element,\r\n            titleComponent = me.titleComponent,\r\n            titleElement = titleComponent.element,\r\n            backButton = me.getBackButton(),\r\n            titleText = me.getTitleText(),\r\n            backButtonText = me.getBackButtonText(),\r\n            animation = me.getAnimation() && view",2010774,42,"animated = ",890685,34," && view.isPainted(),\r\n            properties, leftGhost, titleGhost, leftProps, titleProps;\r\n        if (animated) {\r\n            leftGhost = me.createProxy(leftBox.element);\r\n            leftBoxElement.setStyle('opacity', '0');\r\n            backButton.setText(backButtonText);\r\n            backButton[hasPrevious ? 'show' : 'hide']();\r\n            titleGhost = me.createProxy(titleComponent.element.getParent());\r\n            titleElement.setStyle('opacity', '0');\r\n            me.setTitle(titleText);\r\n            properties = me.measureView(leftGhost, titleGhost, reverse);\r\n            leftProps = properties.left;\r\n            titleProps = properties.title;\r\n            me.isAnimating = true;\r\n            me.animate(leftBoxElement, leftProps.element);\r\n            me.animate(titleElement, titleProps.element",152736,32,"titleElement.setLeft(properties.titleLeft);\r\n        ",887153,41,"        me",1316613,34,"    });",2022927,33,"AndroidStock2 && !this.getAndroid2Transforms()) {\r\n                leftGhost.ghost.destroy();\r\n                titleGhost.ghost",1814506,32,"{\r\n                me.animate(leftGhost.ghost, leftProps.ghost);\r\n                me.animate(titleGhost.ghost, titleProps.ghost",2042000,36,"leftGhost.ghost",175575,33,"titleGhost.ghost.destroy()",45391,36,49632,33,"if (hasPrevious) {\r\n                backButton.setText(backButtonText);\r\n                backButton.show(",351456,42,"backButton",2042494,33,"    me.setTitle(titleText",1078192,38,"Calculates and returns the position values needed for the back button when you are pushing a titl",1469410,32,"measureView: function(oldLeft, oldTitle, revers",571216,42,"barE",1124564,34,"newLeftElement = me.leftBox.element,\r\n            titleElement = me.titleComponent.element,\r\n            minOffset = Math.min(barElement.getWidth() / 3, 200),\r\n            newLeftWidth = newLeftE",1910875,32,"barX = barElement.getX(),\r\n            barWidth = barE",1910875,32,"titleX = titleElement.getX()",1315795,32,"Element.getLeft(),\r\n            titleWidth = titleE",1910875,32,"oldLeftX = oldLeft.x,\r\n            oldLeftWidth = oldLeft.width,\r\n            oldLeftLeft = oldLeft.left,\r\n            useLeft = Ext.browser.is.AndroidStock2 && !this.getAndroid2Transforms(),\r\n            newOffset, oldOffset, leftAnims, titleAnims, omega, theta;\r\n        theta = barX - oldLeftX - oldLeftWidth;\r\n",884512,36,"newOffset = theta;\r\n            oldOffset = Math.min(titleX - oldLeftWidth, minOffset",1119808,34,"oldOffset = theta;\r\n            newOffset = Math.min(titleX - barX, minOffset);\r\n        }\r\n        if (useLeft) {\r\n            leftAnims = {\r\n        ",831391,32,878807,33,"        left: newOffset,\r\n        ",878890,40,803599,32,"to: {",1013728,32,"0,\r\n        ",878890,40,293648,43,690224,33,"leftAnims = {\r\n        ",831391,32,878807,33,"        transform:",180224,32,"translateX: newOffset\r\n        ",1162911,36,"        opacity: 0\r\n    ",1162911,36,"    to: {",855861,35,":",180224,32,"translateX: 0\r\n        ",1162911,36,878898,32,"        }",1162909,38,"ghost: {\r\n        ",878871,35,"        transform:",180224,32,"translateX: oldOffset\r\n        ",1162911,36,"        opacity: 0",69456,57,";\r\n        }\r\n        theta = barX - titleX + newLeftWidth;\r\n        if ((oldLeftLeft + titleWidth) > titleX) {\r\n            omega = barX - titleX - titleWidth;\r\n        }\r\n",884512,36,"titleElement.setLeft(0);\r\n            oldOffset = barX + barWidth - titleX - titleWidth;\r\n            if (omega",1428976,35,"newOffset = omega",1119472,41,"newOffset = theta",1903216,48,"newOffset = barX + barWidth - titleX - titleWidth;\r\n            if (omega",1428976,35,"oldOffset = omega",1119472,41,"oldOffset = the",1529741,32,"newOffset = Math.max(titleLeft, newOffset);\r\n        }\r\n        if (useLeft) {\r\n            titleAnims = {\r\n        ",831391,32,878807,33,"        left: newOffset,\r\n        ",878890,40,803599,32,"to: {",1013728,32,"titleLeft,\r\n        ",878890,40,293648,43,1313680,34,"itleAnims = {\r\n        ",831391,32,878807,33,"        transform:",180224,32,"translateX: newOffset\r\n        ",1162911,36,"        opacity: 0\r\n    ",1162911,36,"    to: {",855861,35,":",180224,32,"translateX: titleLeft\r\n        ",1162911,36,878898,32,"        }",1162909,38,"ghost: {\r\n        ",878871,35,"        transform:",180224,32,"translateX: oldOffset\r\n        ",1162911,36,"        opacity: 0",69456,57,430512,44,"left: leftAnims,\r\n            title: titleAnims,\r\n            titleLeft: titleLeft",346080,37,"Helper method used to animate elements.\n     * You pass it an element, objects for the from and to positions an option onEnd callback called when the animation is over.\n     * Normally this method is passed configurations returned from the methods such as #measureTitle(true) etc.\n     * It is called from the #pushLeftBoxAnimated, #pushTitleAnimated, #popBackButtonAnimated and #popTitleAnimated\n     * methods.\n     *\n     * If the current device is Android, it will use top/left to animate.\n     * If it is anything else, it will use transform",1288218,32,"nimate: function(element, ",339338,33,"me = this,\r\n            animation;\r\n        //reset the left of the element\r\n        element.setLeft(0);\r\n        config = Ext.apply(config, ",1906624,46,"easing: 'ease-in-out',\r\n            duration: me.getAnimation().duration || 250,\r\n",2050877,34,"\r\n        });\r\n        a",805016,32,"config);\r\n",1083020,63,"if (callback)",287904,34,1403647,32,"me);\r\n        Ext.Animator.run(animation);\r\n        me.activeAnimations.push(animation);\r\n    },\r\n    end",719263,33,"var activeAnimations = this.activeAnimations,\r\n            animation, i, ln;\r\n        if (activeAnimations) {\r\n            ln = activeAnim",1745116,45,"n; i++) {\r\n                animation = activeAnimations[i];\r\n                if (animation",883469,33,"    animation.stopAnimation();",74448,48,1083195,34,18240,34,"this.activeAnimations = []",843019,33,"Title",985663,32,719296,38,"this.callParen",1733552,40,"Returns the text needed for the current back button at anytime",1516520,34,"BackButtonText: function() {\r\n        var text = this.backButtonStack[this.backButtonStack.length - 2],\r\n            useTitleForBackButtonText = this.getUseTitleForBackButtonText();\r\n        if (!useTitleForBackButtonTex",1119363,51," = this.getDefaultBackButtonText(",495743,46,"ext",476384,38,"text needed for the current title at anytime",1516520,34,"TitleTex",932608,37,"backButtonStack[this.backButtonStack",932841,38,"Handles removing back button stacks from this bar\n     * @private\n     */\r\n    beforePop: function(count) {\r\n        count--;\r\n        for (var i = 0; i < count; i++) {\r\n            this.backButtonStack.pop",1070608,39,"We override the hidden method because we don't want to remove it from the view using display:none. Instead we just position it off\n     * the screen, much like the navigation bar proxy. This means that all animations, pushing, popping etc. all still work when if you hide/show\n     * this bar at any time.",1274416,32,800767,39,"if (!hidden",789438,33,"Style({\r\n                position: 'relative',\r\n                top: 'auto',\r\n                left: 'auto',\r\n                width: 'auto'",867438,49,"this.element.setStyle({\r\n                position: 'absolute',\r\n                top: '-1000px',\r\n                left: '-1000px',\r\n                width: this.element.getWidth() + 'px'",345392,53,"Creates a proxy element of the passed element, and positions it in the same position, using absolute positioning.\n     * The createNavigationBarProxy method uses this to create proxies of the backButton and the title elements.\n     * @private\n     */\r\n    createProxy",439232,35,"ghost, x, y, left, width;\r\n        ghost = element.dom.cloneNode(true);\r\n        ghost.id = element.id + '-proxy';\r\n        //insert it into the toolbar\r\n        element.getParent().dom.appendChild(ghost);\r\n        //set the x/y\r\n        ghost = Ext.get(ghost);\r\n        x = element.getX();\r\n        y = element.getY();\r\n        left = element.getLeft();\r\n        width = element.getWidth();\r\n        ghost.setStyle('position', 'absolute');\r\n        ghost.setX(x);\r\n        ghost.setY(y);\r\n        ghost.setHeight(element.getHeight());\r\n        ghost.setWidth(width);",1907856,32,"x: x,\r\n            y: y,\r\n            left: left,\r\n",451267,39,"ghost: ghost",1757453,36,"author Robert Dougan <rob@sencha.com>\n *\n * NavigationView is basically a {@link Ext.Container} with a {@link Ext.layout.Card card} layout, so only one view\n * can be visible at a time. However, NavigationView also adds extra functionality on top of this to allow\n * you to `push` and `pop` views at any time. When you do this, your NavigationView will automatically animate\n * between your current active view, and the new view you want to `push`, or the previous view you want to `pop`.\n *\n * Using the NavigationView is very simple. Here is a basic example of it in ac",594879,32,"var view = Ext.create('Ext.NavigationView",1046640,48,"items: [{\n *             title: 'First",262841,47,1110304,43,"Push a new view!",1110361,70,"use the push() method to push another view. It works much like\n *                     // add() or setActiveItem(). it accepts a view instance, or you can give it\n *                     // a view config.\n *                     view.push({\n *                         title: 'Secon",1221835,32,"tml: 'Second view!'",1334342,65,"]\n *         }]\n *     });\n *\n * Now, here comes the fun part: you can push any view/item into the NavigationView, at any time, and it will\n * automatically handle the animations between the two views, including adding a back button (if necessary)\n * and showing the new title.\n *\n *     view.push({\n *         title: 'A new view',\n *         html: 'Some new content'\n *     });\n *\n * As you can see, it is as simple as calling the {@link #method-push} method, with a new view (instance or object). Done.\n *\n * You can also `pop` a view at any time. This will remove the top-most view from the NavigationView, and animate back\n * to the previous view. You can do this using the {@link #method-pop} method (which requires no arguments).\n *\n *     view.pop();\n *\n *  Applications that need compatibility with ##Older Android## devices will want to see the {@link #layout} config for details on\n *  disabling navigation view animations as these devices have poor animation support and performance",1621151,44,"Navigation View Guide](../../../components/navigation_view.html)\n */\r\nExt.define('Ext.navigation.View",1223888,38,"alternateClassName: 'Ext.NavigationView',\r\n    xtype: 'navigationview'",1575264,45,1043136,75,"navigationview",1114448,33,"Boolean/Object} navigationBar\n         * The NavigationBar used in this navigation view. It defaults to be docked to the top",1117600,32,"just pass in a normal object if you want to customize the NavigationBa",184393,42,"navigationBar: {\n         *         ui: 'dark',\n         *         docked: 'bottom",1600976,41,"You **cannot** specify a *title* property in this configuration. The title of the navigationBar is taken\n         * from the configuration of this views children",1359455,32,".push({\n         *         title: 'This views title which will be shown in the navigation bar',\n         *         html: 'Some HTML'",1340288,73,"navigationBar: {\r\n            docked: 'top'",976640,42,"{String} defaultBackButtonText\n         * The text to be displayed on the back button if:\n         *\n         * - The previous view does not have a title.\n         * - The {@link #useTitleForBackButtonText} configuration is",1258111,51,"defaultBackButtonText: 'Back",1114448,33,"Boolean} useTitleForBackButtonText\n         * Set to `false` if you always want to display the {@link #defaultBackButtonText} as the text\n         * on the back button. `true` if you want to use the previous views titl",754080,34,"/\r\n        useTitleForBackButtonTex",864063,40,1055050,51,"NavigationView",1055110,272,"title: 'My title',",1054748,35,1055389,92,"\n         * If you want a titl",1283550,32,"#navigationBar}, you must specify a `title` configuration in your\n         * view, like above.",529216,33,"Only one view will be visible at a time. If you want to change to another view, use the {@link #method-push} or\n         * {@link #setActiveItem} metho",1705728,46,"/**\n         * @cfg {Object}\n         * Layout used in this navigation view, type must be set to 'card'.\n         * **Android NOTE:** Older Android devices have poor animation performance. It is recommended to set the animation to null, f",184397,38," layout: {\n         *          type: 'card',\n         *          animation: null",978046,72,2008879,80,"duration: 300,\r\n    ",880237,45,878079,32,2008987,47,917487,32,"push\n     * Fires when a view is pushed into this navigation view\n     * @param {Ext.navigation.View",768029,36," @param {Mixed} view The view that has been push",1777471,34,"pop\n     * Fires when a view is popped from this navigation view\n     * @param {Ext.navigation.View",768029,36," @param {Mixed} view The view that has been popp",1777471,34,"back\n     * Fires when the back button in the navigation view was tapped.\n     * @param {Ext.navigation.View} this The component instance\\",2003535,128,"\r\n            ],\r\n            navigationBar: {\r\n                splitNavigation: true",7776,32,"]",1261611,71,",\r\n            navBar = me.getNavigationBar();\r\n        //add a listener onto the back button in the navigationbar\r\n        if (navBar) {\r\n            navBar.on({\r\n                back: me.onBackButtonTap",1312458,43,");\r\n            me.relayEvents(navBar, 'rightbuttontap');\r\n            me.relayEvents(me, {\r\n                add: 'push',\r\n                remove: 'pop'",347360,38,"var layout = me",851744,33," && !layout.isCard",343373,34,"'The base layout for a NavigationView must always be a Card Layout",2037488,39,"@private\n     */\r\n    applyLayout",1226368,62,1345450,54," Called when the user taps on the back button\n     */\r\n    onBackButtonTap: function() {\r\n        this.pop();\r\n        this.fireEvent('back",891502,34,"Pushes a new view into this navigation view using the default animation that this view has.\n     * @param {Object} view The view to push",1067359,37,"new item you just pushed.\n     */\r\n    push: function(view) {\r\n        return this.add(view)",500800,38,"current active view from the stack and sets the previous view using the default animation\n     * of this view. You can also pass",1050894,38," to target what inner item to pop to.\n     * @param {Number/String/Object} count If a Number, the number of views you want to pop. If a String, the pops to a matching\n     * component query. If an Object, the pops to a matching view instance",1067359,37,"new active item\n     */\r\n    pop",1478585,33,"this.beforePop(count)) {\r\n            return this.doPop",1070608,39,"@private\n     * Calculates whether it needs to remove any items from the stack when you are popping more than 1\n     * item. If it does, it removes those views from the stack and returns `true`",481440,37,"it has removed views.\n     */\r\n    beforePop: function(cou",708768,43,1069205,46,"Ext.isString(count) || Ext.isObject(count)) {\r\n            var last = innerItems.length - 1,",128879,41,"= last",1075478,34,"if ((Ext.isString(count) && Ext.ComponentQuery.is(innerItems[i], count)) || (Ext.isObject(count) && count == innerItems[i])) {\r\n                    count = last - i",651024,47,1161136,35,"Ext.isNumber(count)",44080,59,"}\r\n        var ln = innerItems.length,\r\n            toRemove;\r\n        //default to 1 pop\r\n        if (!Ext.isNumber(count) || count < 1) {\r\n            count = 1;\r\n        }\r\n        //check if we are trying to remove more items than we have\r\n        count = Math.min(count, ln - 1);\r\n        if (count) {\r\n            //we need to reset the backButtonStack in the navigation bar\r\n            me.getNavigationBar().beforePop(count);\r\n            //get the items we need to remove from the view and remove theme\r\n            toRemove = innerItems.splice(-count, count - 1",31523,32,"toRemove.",1188816,32,"this.remove(toRemove[i]",803056,39,999855,78,"/\r\n    doPo",1320256,53,1080653,46,"set the new active item to be the new last item of the stack\r\n        me.remove(innerItems[innerItems.length - 1]);\r\n        // Hide the backButton\r\n        if (innerItems.length < 3 && this.$backButton) {\r\n            this.$backButton.hide();\r\n        }\r\n        // Update the title container\r\n        if (this.$titleContainer) {\r\n            if (!this.$titleContainer.setTitle",347022,32,"error('You have selected to display a title in a component that does not                     support titles in NavigationView. Please remove the `title` configuration from your                     NavigationView item, or change it to a component that has a `setTitle` method",60719,33,"var item = innerItems[innerItems.length - 2];\r\n            this.$titleContainer.setTitle((item.getTitle) ? item.getTitle() : item.config.titl",1921888,36,"getActiveItem(",1500336,35,"the previous item, if one exists.\n     * @return {Mixed} The previous view\n     */\r\n    getPreviousItem",897946,46,"getInnerItems();\r\n        return innerItems[innerItems.length - 2]",1244400,38,"backbutton text accordingly in the {@link #navigationBar}",1120047,36,"UseTitleForBackButtonText: function(useTitleForBackButtonText) {\r\n        var navigationBar = this.getNavigationBar();\r\n        if (navigationBar) {\r\n            navigationBar.setUseTitleForBackButtonText(useTitleForBackButtonText",1759440,39,"pdates the backbutton text accordingly in the {@link #navigationBar}",1120047,36,"DefaultBackButtonText: function(defaultBackButtonText) {\r\n        var navigationBar = this.getNavigationBar();\r\n        if (navigationBar) {\r\n            navigationBar.setDefaultBackButtonText(defaultBackButtonText",1078192,38,"This is called when an Item is added to the BackButtonContainer of a SplitNavigation View\n     * @private\n     *\n     * @param toolbar\n     * @param item\n     */\r\n    onBackButtonContainerAdd: function(toolbar, item) {\r\n        item.on(",1845725,41,"show: this.refreshBackButtonContainer,\r\n            hide: this.refreshBackButtonContainer",989564,35,"BackButtonContainer",1751982,33,"is called when an Item is removed from the BackButtonContainer of a SplitNavigation View\n     * @private\n     *\n     * @param toolbar\n     * @param item\n     */\r\n    onBackButtonContainerRemove: function(toolbar, item) {\r\n        item.un(",1845725,41,"show: this.refreshBackButtonContainer,\r\n            hide: this.refreshBackButtonContainer",989564,35,"BackButtonContainer",1751982,33,"is used for Blackberry SplitNavigation to monitor the state of child items in the bottom toolbar.\n     * if no visible children exist the toolbar will be hidden",553200,32,"freshBackButton",730957,33,"if (!this.$backButtonContainer",559502,49,"i = 0,\r\n            backButtonContainer = this.$backButtonContainer,\r\n            items = backButtonContainer.items",1447669,41,"items.length",924880,34,".get(i);\r\n            if (!item",2035181,32,"this.$backButtonContainer.show(",513339,68,"$backButtonContainer.hid",493424,35,"applyNavigationBa",1369120,35,"me = this;\r\n",2055216,36,"config = {\r\n                hidden: true,\r\n                docked: 'top",553775,38,"if (config.title) {\r\n            delete config.titl",1601784,32,"\"Ext.navigation.View: The 'navigationBar' configuration does not accept a 'title' property. You \" + \"set the title of the navigationBar by giving this navigation view's children a 'title' property.\");\r\n        }\r\n        config.view = this;\r\n        config.useTitleForBackButtonText = this.getUseTitleForBackButtonText();\r\n        // Blackberry specific nav setup where title is on the top title bar and the bottom toolbar is used for buttons and BACK\r\n        if (config.splitNavigation) {\r\n            this.$titleContainer = this.add({\r\n",2069324,48,2068708,36,"ui: 'light',\r\n                title: this.$currentTitle || ''",815936,32,"ar containerConfig = (config.splitNavigation === true) ? {} : config.splitNavigation;\r\n            this.$backButtonContainer = this.add({\r\n",1112685,33,"\r\n",1290236,51,"hidden",2050766,37,"// Any item that is added to the BackButtonContainer should be monitored for visibility\r\n            // this will allow the toolbar to be hidden when no items exist in it.\r\n            this.$backButtonContainer.on({\r\n",1069533,44,"add: me.onBackButtonContainerAdd,\r\n                remove: me.onBackButtonContainerRemov",815935,32,"this.$backButton = this.$backButtonContainer.add({\r\n",1217373,32,"\r\n                text: 'Back',\r\n                hidden: true,\r\n                ui: 'back'",68103,33," Default config items go into the bottom bar\r\n            if (config.items) {\r\n                this.$backButtonContainer.add(config.item",1673136,32,"// If the user provided items and splitNav items, default items go into the bottom bar, split nav items go into the top\r\n            if (containerConfig.items) {\r\n                this.$titleContainer.add(containerConfig.item",1673136,32,"this.$backButton.on({\r\n",803615,46,"tap: this.onBackButtonTap\r\n            });",1583966,42,"hidden: true,\r\n                docked: 'top",553775,45,"Ext.factory(config, Ext.navigation.Bar, this.getNavigationBar",1226974,41,"NavigationBar: function(newNavigationBar, oldNavigationBar) {\r\n        if (oldNavigationBar",1293289,32,"NavigationBar, true);\r\n        }\r\n        if (newNavigation",2012658,32,"NavigationBar",1290864,65,1082477,33,1080619,34,"me = this",2013776,46,1080686,67,"me.getItems();\r\n        // If we are not initialzed yet, we should set the active item to the last item in the stack\r\n        if (!me.initialized) {",1081057,37,1074408,33,1693452,38,"activeItem,\r\n            currentActiveItem\r\n        ])",1070096,66,"var me = this",2013776,61,"animation = me.getLayout().getAnimation();\r\n        if (innerIndex > 0) {",2010964,41,"isAnimation",2011015,42,"tru",294720,32,"me.setActiveItem(innerIndex - 1);\r\n            me.getNavigationBar().onViewRemove(me, innerItems[innerIndex], innerI",1068767,42,"@private\n     */\r\n    doRemove: function() {\r\n        var",2010757,44,";",890671,78,"Reverse(false",1084269,32,1997885,32,996032,35,1077532,42,"// Check for title configuration\r\n        if (item && item.getDocked() && item.config.title === true) {\r\n            this.$titleContainer = item",1079141,39,"Add(item, index);\r\n        var navigaitonBar = this.getInitialConfig().navigationBar;\r\n        if (!this.isItemsInitializing",1067839,39,"this.setActiveItem(item);\r\n            // Update the navigationBar\r\n            if (navigaitonBar) {\r\n                this.getNavigationBar().onViewAdd(this, item, index",128511,34,"Update the custom backButton\r\n            if (this.$backButtonContainer) {\r\n                this.$backButton.show(",954335,42,"item",1067839,39,"// Update the title container title\r\n            this.updateTitleContainerTitle((item.getTitle) ? item.getTitle() : item.config.title",1034431,33,1077628,93,"/**\n     * @private\n     * Updates the title of the titleContainer, if it exists\n     */\r\n    updateTitleContainer",1226707,39,"his.$titleContainer) {\r\n            if (!this.$titleContainer.setTitle",347022,32,"error('You have selected to display a title in a component that does not                     support titles in NavigationView. Please remove the `title` configuration from your                     NavigationView item, or change it to a component that has a `setTitle` method",60719,33,"this.$titleContainer.setTitle(titl",440192,35,"this.$currentTitle = title",1459792,39,"sets the view by removing all items between the first and last item",1067359,37,"view that is now active",1262592,43,"return this.pop(this.getInnerItems()",1478909,32,1999718,68622,"home.HomeContainer",2068344,46,"homeContainer',\r\n    title: '\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff',\r\n    iconCls: 'home',\r\n    items: [\r\n        {\r\n            title: '\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff'",1318544,38,"itle: '\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff'",1318544,38,"itle: '\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff'\r\n        }\r\n    ]\r\n});\r\n\r\nExt.define('here.view.my.MyContainer', {\r\n    extend: Ext.NavigationView,\r\n    xtype: 'myContainer',\r\n    config: {\r\n        tab: {\r\n            title: '\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff',\r\n            iconCls: 'user'\r\n        }\r\n    }\r\n});",2068314,183,"xclass: 'here.view.home.HomeContain",1312365,33,"{\r\n",1217373,32,"\r\n                text: '\ufffff\ufffff\ufffff\ufffff\ufffff\ufffff',\r\n                iconCls: 'compose",1026062,50,"xclass: 'here.view.my.MyContainer'",2069793,688,",\r\n        'home.HomeContainer',\r\n        'my.MyContainer",2070480,1190,"-app\\app.js\r\n\r\n"]